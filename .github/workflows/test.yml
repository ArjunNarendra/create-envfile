name: 'build-test'
on: # rebuild any PRs and main branch changes
  pull_request:
  push:
    branches:
      - main
      - 'releases/*'

jobs:
  build: # make sure build/ci work properly
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          npm install
      - run: |
          npm run all

  test: # make sure the action works on a clean machine without building
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./

  test-general:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Make envfile
        uses: ./
        with:
          envkey_DEBUG: false
          envkey_SOME_API_KEY: '123456abcdef'
          envkey_SECRET_KEY: ${{ secrets.SECRET_KEY }}
          some_other_variable: foobar
          file_name: .env

      - name: Verify envfile
        run: |
          TEST=$(cat <<-END
          DEBUG=false
          SECRET_KEY=password123
          SOME_API_KEY=123456abcdef
          END
          )
          if [ "$TEST" != "$(cat .env)" ]
          then
            echo "Actual:"
            cat .env
            echo "Expected:"
            echo "$TEST"
            exit 1
          fi

  test-filename:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Make envfile
        uses: ./
        with:
          envkey_DEBUG: false
          file_name: .other-file

      - name: Verify envfile
        run: |
          TEST=$(cat <<-END
          DEBUG=false
          END
          )
          if [ "$TEST" != "$(cat .other-file)" ]
          then
            echo "Actual:"
            cat .other-file
            echo "Expected:"
            echo "$TEST"
            exit 1
          fi

  test-relative-path-above:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Make envfile
        uses: ./
        with:
          envkey_DEBUG: false
          directory: ../

      - name: Verify envfile
        run: |
          TEST=$(cat <<-END
          DEBUG=false
          END
          )
          if [ "$TEST" != "$(cat ../.env)" ]
          then
            echo "Actual:"
            cat ../.env
            echo "Expected:"
            echo "$TEST"
            exit 1
          fi

  test-relative-path-subdirectory-1:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Create folder
        run: |
          mkdir -p subdir

      - name: Make envfile
        uses: ./
        with:
          envkey_DEBUG: false
          directory: subdir

      - name: Verify envfile
        run: |
          TEST=$(cat <<-END
          DEBUG=false
          END
          )
          if [ "$TEST" != "$(cat subdir/.env)" ]
          then
            echo "Actual:"
            cat subdir/.env
            echo "Expected:"
            echo "$TEST"
            exit 1
          fi

  test-relative-path-subdirectory-2:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Create folder
        run: |
          mkdir -p subdir

      - name: Make envfile
        uses: ./
        with:
          envkey_DEBUG: false
          directory: ./subdir

      - name: Verify envfile
        run: |
          TEST=$(cat <<-END
          DEBUG=false
          END
          )
          if [ "$TEST" != "$(cat subdir/.env)" ]
          then
            echo "Actual:"
            cat subdir/.env
            echo "Expected:"
            echo "$TEST"
            exit 1
          fi

  should-fail-test-absolute-path:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Create folder
        run: |
          mkdir -p subdir

      - name: Make envfile
        uses: ./
        with:
          envkey_DEBUG: false
          directory: /home

  should-fail-test-bad-secret:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Create folder
        run: |
          mkdir -p subdir

      - name: Make envfile
        uses: ./
        with:
          fail_on_empty: true
          envkey_SECRET_KEY: ${{ secrets.NON_EXISTENT_SECRET }}

  # Test empty envkeys
  should-fail-test-empty-envkey:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Create folder
        run: |
          mkdir -p subdir

      - name: Make envfile
        uses: ./
        with:
          envkey_SECRET_KEY: ''
          fail_on_empty: true
        continue-on-error: true

      - name: Verify last step failed
        if: steps.integrationTests.outcome == 'success'
        run: |
          echo "Expected last step to fail"
          exit 1

  test-empty-envkey-default-option:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Create folder
        run: |
          mkdir -p subdir

      - name: Make envfile
        uses: ./
        with:
          envkey_SECRET_KEY: ''

      - name: Verify envfile
        run: |
          TEST=$(cat <<-END
          SECRET_KEY=
          END
          )
          if [ "$TEST" != "$(cat .env)" ]
          then
            echo "Actual:"
            cat .env
            echo "Expected:"
            echo "$TEST"
            exit 1
          fi
